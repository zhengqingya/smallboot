
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # include /etc/nginx/conf.d/*.conf;

    underscores_in_headers on;     # 允许在HTTP请求头中使用下划线（underscore）字符

    server {
        listen       80;
        server_name  localhost; # 服务器地址或绑定域名

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;



        # =========================================================
        # ================== ↓↓↓↓↓↓ start ↓↓↓↓↓↓ ==================
        # =========================================================

        proxy_set_header Host $host;  # 设置代理请求头中的主机名（Host）为客户端请求的主机名
        proxy_set_header X-Real-IP $remote_addr; # 将客户端的真实 IP 地址作为 X-Real-IP 请求头发送给后端服务器
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 在请求头中添加 X-Forwarded-For 字段，用于追踪经过的代理服务器地址
        proxy_set_header User-Agent $http_user_agent; # 将客户端的 User-Agent 请求头字段传递给后端服务器

        location / {
            root   /usr/share/nginx/html;
            #try_files $uri $uri/ @router;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html; # 解决页面刷新 404 问题
            #proxy_pass http://zhengqingya.gitee.io; # 代理的ip地址和端口号
            #proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）
            #proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）
        }

        # 子目录访问
        location ^~ /h5 {
            alias   /usr/share/nginx/html/h5;
            index  index.html index.htm;
            try_files $uri $uri/ /h5/index.html; # 解决页面刷新 404 问题
        }


        location /web/api/ {
            proxy_pass   http://192.168.101.2:888/web/api/;
        }

        location /mini/api/ {
            proxy_pass   http://192.168.101.2:888/mini/api/;
        }

        location ^~ /prod-api/ {
            proxy_pass   http://192.168.101.2:888/;
        }

        location ^~ /file/ {
            alias  /usr/share/nginx/html/;
        }

        location ^~ /test-api/ {
            proxy_pass   http://192.168.101.2:8006/;
        }



        #location @router {
            #rewrite ^.*$ /index.html last; # 拦截80端口后的所有请求地址到登录页面 -> 相当于后端的拦截器
        #}


        # =========================================================
        # ================== ↑↑↑↑↑↑ end ↑↑↑↑↑↑ ==================
        # =========================================================


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }
}
